apply plugin: 'idea'
apply plugin: 'groovy'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.4.3'
    compile group: 'com.cathive.sass', name: 'com.cathive.sass', version: '3.1.0.1'
    compile gradleApi()
}

group = 'desirableobjects.gradle.plugins'
archivesBaseName = 'gradle-sass-plugin'
version = '0.1.0'

apply plugin: 'distribution'

distributions {
    main {
        baseName = archivesBaseName
        contents {
            from { libsDir }
        }
    }
}

ext {
    bintrayBaseUrl = 'https://api.bintray.com/maven'
    bintrayUsername = 'antony'
    bintrayRepository = 'gradle-plugins'
    bintrayPackage = 'gradle-sass-plugin'
}

apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
   from sourceSets.main.allSource
   classifier = 'source'
}

publishing {
    publications {
        plugin(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Gradle Sass plugin')
                root.appendNode('description', 'Gradle plugin for compiling and watching sass and scss.')
                root.appendNode('inceptionYear', '2015')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('id', 'antony')
                developer.appendNode('name', 'Antony Jones')
                developer.appendNode('email', 'aj@desirableobjects.co.uk')
            }

        }
    }

    repositories {
        maven {
            name 'Bintray'
            url "$bintrayBaseUrl/$bintrayUsername/$bintrayRepository/$bintrayPackage"

            credentials {
                username = System.getenv('BINTRAY_USERNAME') ?: 'invalid_user'
                password = System.getenv('BINTRAY_API_KEY') ?: 'invalid_key'
            }
        }
    }
}
